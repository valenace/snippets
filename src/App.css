/* #root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
} */

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

:root {
  --piecesize: 100px; /* Tamaño de cada pieza */
  --piecetipsize: 15px; /* Tamaño de las pestañas */
  --pieceradius: 5px; /* Radio de bordes redondeados */
  --bg: #ecf0f9;
}
#main-wrapper {
  display: flex
;
    justify-content: center;
    height: 100%;
}
#main-wrapper:before {
  position: absolute;
  width: 100%;
  height: 1px;
  background: red;
  top: 50%;
  left: 0;
}
#puzzle {
  width: 240px; /* Ajustado para 3 columnas */
  height: 160px; /* Ajustado para 2 filas */
  display: flex;
  flex-wrap: wrap;
  position: relative;
}
.piece {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: var(--piecesize);
  height: var(--piecesize);
  cursor: pointer;
  transition: transform 0.5s ease-in-out, opacity 0.3s ease-in-out;
  opacity: 0; /* Oculta todas las piezas inicialmente */
  pointer-events: none; /* Desactiva interacción con piezas no visibles */
}
.piece[data-visible="true"] {
  opacity: 1; /* Muestra piezas con data-visible="true" */
  pointer-events: auto; /* Activa interacción */
}
.piece[data-position="0"] {
  transform: translateX(var(--initial-x)) translateY(var(--initial-y)) rotate(var(--initial-rotate));
}
.piece[data-position="1"] {
  transform: translateX(var(--final-x)) translateY(var(--final-y)) rotate(0deg);
}

/* Definición de las piezas */
.piece1 {
  background: #61D2D6;
  border-radius: var(--pieceradius) 0 0 0;
  z-index: 5;
  --initial-x: 40px;
  --initial-y: 240px; /* Posición inicial arriba */
  --initial-rotate: 0deg;
  --final-x: 0px;
  --final-y: 0px;
}
.piece2 {
  background: #ED146F;
  --initial-x: 40px;
  --initial-y: 240px; /* Posición inicial arriba */
  --initial-rotate: 0deg;
  --final-x: 100px;
  --final-y: 0px;
}
.piece3 {
  background: #EDE5E2;
  border-radius: 0 0 0 var(--pieceradius);
  z-index: 4;
  --initial-x: 40px;
  --initial-y: 240px; /* Posición inicial arriba */
  --initial-rotate: 0deg;
  --final-x: 0px;
  --final-y: 100px;
}
.piece4 {
  background: #EDDE45;
  --initial-x: 40px;
  --initial-y: 240px; /* Posición inicial arriba */
  --initial-rotate: 0deg;
  --final-x: 100px;
  --final-y: 100px;
}
.piece5 {
  background: #FFA726;
  border-radius: 0 var(--pieceradius) 0 0;
  z-index: 6; /* Aseguramos que esta pieza esté encima de la pieza 6 */
  --initial-x: 40px;
  --initial-y: 240px;
  --initial-rotate: 0deg;
  --final-x: 200px;
  --final-y: 0px;
}
.piece6 {
  background: #66BB6A;
  border-radius: 0 0 var(--pieceradius) 0;
  z-index: 5; /* Mantener esta pieza debajo de la pieza 5 */
  --initial-x: 40px;
  --initial-y: 240px;
  --initial-rotate: 0deg;
  --final-x: 200px;
  --final-y: 100px;
}

/* Estilos para los conectores (tips) */
.piece1:after,
.piece1:before,
.piece2:after,
.piece2:before,
.piece3:after,
.piece3:before,
.piece4:after,
.piece4:before,
.piece5:after,
.piece5:before,
.piece6:after,
.piece6:before {
  content: '';
  position: absolute;
  display: block;
  width: var(--piecetipsize);
  height: var(--piecetipsize);
  border-radius: 50%;
}

/* Pieza 1 */
.piece1:after {
  top: calc(50% - var(--piecetipsize) / 2);
  right: calc(-1 * var(--piecetipsize) / 1.3);
  background: inherit;
  z-index: 1;
}
.piece1:before {
  bottom: calc(-1 * var(--piecetipsize) / 1.3);
  right: calc(50% - var(--piecetipsize) / 2);
  background: inherit;
  z-index: 1;
}

/* Pieza 2 */
.piece2:after {
  top: calc(50% - var(--piecetipsize) / 2);
  left: -5px;
  background: transparent;
}
.piece2:before {
  bottom: -4px;
  right: calc(50% - var(--piecetipsize) / 2);
  background: transparent;
  z-index: 1;
}

/* Pieza 3 */
.piece3:before {
  top: -5px;
  right: calc(50% - var(--piecetipsize) / 2);
  background: transparent;
  z-index: 1;
}
.piece3:after {
  top: calc(50% - var(--piecetipsize) / 2);
  right: calc(-1 * var(--piecetipsize) / 1.3);
  background: inherit;
  z-index: 1;
}

/* Pieza 4 */
.piece4:after {
  top: calc(50% - var(--piecetipsize) / 2); /* Conexión horizontal hacia la pieza 6 */
  right: calc(-1 * var(--piecetipsize) / 1.3);
  background: transparent;
  z-index: 5; /* Mantener correcta superposición */
}
.piece4:before {
  top: calc(-1 * var(--piecetipsize) / 1.3);
  right: calc(50% - var(--piecetipsize) / 2);
  background: inherit;
  z-index: 1;
}

/* Pieza 5 */
.piece5:after {
  top: calc(50% - var(--piecetipsize) / 2); /* Conexión horizontal hacia la pieza 4 */
  left: calc(-1 * var(--piecetipsize) / 2); /* Ajuste para alineación perfecta */
  background: inherit;
  z-index: 6; /* Aseguramos que la pieza esté correctamente encima */
}
.piece5:before {
  bottom: calc(-1 * var(--piecetipsize) / 1.3);
  right: calc(50% - var(--piecetipsize) / 2);
  background: inherit;
  z-index: 1;
}

/* Pieza 6 */
.piece6:after {
  top: calc(50% - var(--piecetipsize) / 2); /* Conexión horizontal hacia la pieza 4 */
  left: calc(-1 * var(--piecetipsize) / 2); /* Ajuste para alineación perfecta */
  background: inherit;
  z-index: 6; /* Aseguramos que la pieza esté correctamente encima */
}
.piece6:before {
  top: calc(-1 * var(--piecetipsize) / 1.3); /* Conexión vertical hacia la pieza 4 */
  left: calc(50% - var(--piecetipsize) / 2);
  background: transparent; /* Ajuste de color para alineación correcta */
  z-index: 5; /* Mantener coherencia visual */
}

/* Eliminar la pestaña derecha de la pieza 5 */
.piece5:after {
  display: none; /* Ocultar la pestaña derecha */
}

/* Estilo del botón Reset */
#reset-button {
  padding: 10px 20px;
  margin-bottom: 1rem;
  font-size: 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease-in-out;
}
#reset-button:hover {
  background-color: #0056b3;
}
.con-saltos-de-linea {
  white-space: pre-wrap;
}



/* ############# */


.course-sidebar {
  background-color: #f7f7f7;
  border-radius: 8px;
  padding: 20px;
  width: 300px; /* Ajusta el ancho según sea necesario */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.course-title {
  color: #333;
  font-size: 1.5em;
  margin-bottom: 15px;
}

.completion-status {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.completion-status span {
  color: #555;
  font-size: 0.9em;
  margin-right: 10px;
}

.progress-bar {
  background-color: #ddd;
  border-radius: 5px;
  height: 8px;
  flex-grow: 1;
  margin-right: 10px;
}

.progress {
  background-color: #007bff; /* Color primario */
  height: 100%;
  border-radius: 5px;
}

.calendar-button {
  background: none;
  border: none;
  font-size: 1.2em;
  cursor: pointer;
  color: #555;
}

.module-item {
  margin-bottom: 10px;
  border: 1px solid #eee;
  border-radius: 5px;
  overflow: hidden;
}

.module-header {
  background-color: #fff;
  padding: 10px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  cursor: pointer;
}

.module-info {
  flex-grow: 1;
}

.module-name {
  color: #333;
  font-weight: bold;
}

.module-details {
  color: #777;
  font-size: 0.85em;
}

.module-details span {
  margin-right: 10px;
}

.dropdown-button {
  background: none;
  border: none;
  font-size: 1em;
  cursor: pointer;
  color: #555;
}

.submodule-list {
  list-style: none;
  padding: 0;
  margin: 0;
  background-color: #f9f9f9;
}

.submodule-item {
  padding: 10px 15px;
  border-top: 1px solid #eee;
  display: flex;
  align-items: center;
  color: #555;
  font-size: 0.9em;
}

.submodule-name {
  flex-grow: 1;
}

.submodule-duration {
  margin-left: 10px;
}

.submodule-locked {
  color: red;
  margin-left: 10px;
}

/* Estilos para los iconos (puedes usar una librería de iconos como Font Awesome) */
.icon-clock::before {
  content: "⏱️"; /* Ejemplo de icono Unicode */
  margin-right: 5px;
}

.icon-book::before {
  content: "📚"; /* Ejemplo de icono Unicode */
  margin-right: 5px;
}




/* #___________________________# */

import { useState } from "react";
import "./Timeline.css"; // Asegúrate de crear este archivo para los estilos

const items = [
  { id: 1, titulo: "Evento 1", fecha: "10/01/2025", descripcion: "Breve descripción 1", detalle: "Descripción más larga del evento 1." },
  { id: 2, titulo: "Evento 2", fecha: "15/02/2025", descripcion: "Breve descripción 2", detalle: "Descripción más larga del evento 2." },
  { id: 3, titulo: "Evento 3", fecha: "20/03/2025", descripcion: "Breve descripción 3", detalle: "Descripción más larga del evento 3." },
  { id: 4, titulo: "Evento 4", fecha: "25/04/2025", descripcion: "Breve descripción 4", detalle: "Descripción más larga del evento 4." },
  { id: 5, titulo: "Evento 5", fecha: "30/05/2025", descripcion: "Breve descripción 5", detalle: "Descripción más larga del evento 5." },
  { id: 6, titulo: "Evento 6", fecha: "05/06/2025", descripcion: "Breve descripción 6", detalle: "Descripción más larga del evento 6." },
  { id: 7, titulo: "Evento 7", fecha: "10/07/2025", descripcion: "Breve descripción 7", detalle: "Descripción más larga del evento 7." },
  { id: 8, titulo: "Evento 8", fecha: "15/08/2025", descripcion: "Breve descripción 8", detalle: "Descripción más larga del evento 8." }
];

const Timeline = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [selectedItem, setSelectedItem] = useState(null);

  const handleNext = () => {
    if (currentIndex + 4 < items.length) setCurrentIndex(currentIndex + 4);
  };

  const handlePrev = () => {
    if (currentIndex - 4 >= 0) setCurrentIndex(currentIndex - 4);
  };

  const handleShowDetail = (item) => {
    setSelectedItem(item);
  };

  return (
    <div className="timeline-container">
      <div className="timeline">
        {items.slice(currentIndex, currentIndex + 4).map((item) => (
          <div key={item.id} className="timeline-item" onClick={() => handleShowDetail(item)}>
            <h3>{item.titulo}</h3>
            <p>{item.fecha}</p>
            <p>{item.descripcion}</p>
          </div>
        ))}
      </div>
      <div className="controls">
        <button onClick={handlePrev} disabled={currentIndex === 0}>Anterior</button>
        <button onClick={handleNext} disabled={currentIndex + 4 >= items.length}>Siguiente</button>
      </div>

      {selectedItem && (
        <div className="modal">
          <div className="modal-content">
            <h2>{selectedItem.titulo}</h2>
            <p><strong>Fecha:</strong> {selectedItem.fecha}</p>
            <p>{selectedItem.detalle}</p>
            <button onClick={() => setSelectedItem(null)}>Cerrar</button>
          </div>
        </div>
      )}
    </div>
  );
};

export default Timeline;
